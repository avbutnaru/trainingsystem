@model TrainingSystem.Models.ManageGroupViewModel
@{
    ViewBag.Title = "Add / Edit Learning Group";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("EditGroup", "Community", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Add / Edit Learning Group</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Description, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.TextAreaFor(m => m.Description, new {@class = "form-control"})
        </div>
    </div>
    @Html.HiddenFor(m => m.Id)
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
}

@{
    if (Model.GroupMembers.Count > 0)
    {
        <h4>Members</h4>
        <table class="table">
            <tbody>
                @foreach (var groupMember in Model.GroupMembers)
                {
                    <tr>
                        <td>@groupMember.AspNetUser.UserName</td>
                        <td>
                            @if (groupMember.IsTeacher)
                            {
                                <span>Teacher &nbsp;</span>
                            }
                            @if (groupMember.IsStudent)
                            {
                                <span>Student &nbsp;</span>
                            }
                        </td>
                        <td>
                            @Html.ActionLink("Remove", "RemoveGroupMember", new { @id = groupMember.Id, trainingGroupId = Model.Id })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>You did not add any members yet!</p>
    }
}

@if (Model.Id != null)
{
    using (Html.BeginForm("AddGroupMember", "Community", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Add Group Member</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.AddGroupMember.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.AddGroupMember.Email, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.AddGroupMember.IsTeacher, "Roles", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.CheckBoxFor(p => p.AddGroupMember.IsTeacher) Teacher
                @Html.CheckBoxFor(p => p.AddGroupMember.IsStudent) Student
            </div>
        </div>
        @Html.HiddenFor(m => m.Id)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="btn btn-default" />
            </div>
        </div>
    }

    if (Model.RoadsForGroup.Count > 0)
    {
        <h4>Roads available for this group</h4>
        <table class="table">
            <tbody>
                @foreach (var road in Model.RoadsForGroup)
                {
                    <tr>
                        <td>@road.Name</td>
                        <td>
                            @if (road.IsAvailable)
                            {
                                @Html.ActionLink("Deactivate", "DeactivateRoadForGroup", new { @id = road.Id, trainingGroupId = Model.Id })
                            }
                            else
                            {
                                @Html.ActionLink("Activate", "ActivateRoadForGroup", new { @id = road.Id, trainingGroupId = Model.Id })
                            }
                        </td>
                        <td>
                            
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>You did not add any roads yet!</p>
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
